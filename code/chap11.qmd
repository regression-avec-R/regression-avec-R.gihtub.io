---
title: "11 Régression logistique"
toc: true
---

# Présentation du modèle

```{r}
artere <- read.table("../donnees/artere.txt",header=T)
plot(chd~age,data=artere,pch=16)
```

```{r}
tab_freq <- table(artere$agrp,artere$chd)
freq <- tab_freq[,2]/apply(tab_freq,1,sum)
cbind(tab_freq,round(freq,3))
x.age <- c(19,29,34,39,44,49,54,59)
plot(x.age,c(freq),type="s",xlim=c(18,80),ylim=c(0,1),xlab="âge",ylab="freq")
lines(c(59,80),rep(freq[length(freq)],2))
x <- seq(15,80,by=0.01)
y <- exp(-5.31+0.11*x)/(1+exp(-5.31+0.11*x))
lines(x,y,lty=3)
```


```{r}
glm(chd~age,data=artere,family=binomial)
```


```{r}
set.seed(12345)
X <- factor(sample(c("A","B","C"),100,replace=T))
#levels(X) <- c("A","B","C")
Y <- rep(0,100)
Y[X=="A"] <- rbinom(sum(X=="A"),1,0.9)
Y[X=="B"] <- rbinom(sum(X=="B"),1,0.1)
Y[X=="C"] <- rbinom(sum(X=="C"),1,0.9)
donnees <- data.frame(X,Y)
model <- glm(Y~.,data=donnees,family=binomial)
coef(model)
model1 <- glm(Y~C(X,sum),data=donnees,family=binomial)
coef(model1)
```

# Intervalles de confiance et tests


```{r message=FALSE, warning=FALSE}
library(bestglm)
data(SAheart)
new.SAheart <- SAheart[c(2,408,35),]
row.names(new.SAheart) <- NULL
SAheart <- SAheart[-c(2,408,35),]
model <- glm(chd~.,data=SAheart,family=binomial)
round(summary(model)$coefficients,4)
confint.default(model)
```


```{r}
n <- 1000
set.seed(123)
X1 <- sample(c("A","B","C"),n,replace=TRUE)
X2 <- rnorm(n)
X3 <- runif(n)
cl <- 1+0*(X1=="A")+1*(X1=="B")-3*(X1=="C")+2*X2
Y <- rbinom(n,1,exp(cl)/(1+exp(cl)))
donnees <- data.frame(X1,X2,X3,Y)
```

```{r message=FALSE, warning=FALSE}
m1 <- glm(Y~.,data=donnees,family=binomial)
library(car)
Anova(m1,type=3,test.statistic="Wald")
Anova(m1,type=3,test.statistic="LR")

m01 <- glm(Y~X2+X3,data=donnees,family=binomial)
m02 <- glm(Y~X1+X3,data=donnees,family=binomial)
m03 <- glm(Y~X1+X2,data=donnees,family=binomial)
anova(m01,m1,test="LRT")
anova(m02,m1,test="LRT")
anova(m03,m1,test="LRT")

library(aod)
wald.test(Sigma=vcov(m1),b=coef(m1),Terms=c(2,3))

```


# Prévisions


```{r}
model <- glm(chd~.,data=SAheart,family=binomial)
```


```{r}
new.SAheart <- SAheart[c(2,408,35),-10]
row.names(new.SAheart) <- NULL
new.SAheart
```

```{r}
predict(model, newdata=new.SAheart)
```

```{r}
predict(model, newdata=new.SAheart,type="response")
```

```{r}
prev <- predict(model,newdata=new.SAheart,type="link",se.fit = TRUE)
cl_inf <- prev$fit-qnorm(0.975)*prev$se.fit
cl_sup <- prev$fit+qnorm(0.975)*prev$se.fit
binf <- exp(cl_inf)/(1+exp(cl_inf))
bsup <- exp(cl_sup)/(1+exp(cl_sup))
data.frame(binf,bsup)
```


```{r}
unique(artere[,"age"])
sature <- aggregate(artere[,"chd"],by=list(artere$age),FUN=mean)
names(sature) <- c("age","p")
ndesign <- aggregate(artere[,"chd"],by=list(artere$age),FUN=length)
names(ndesign) <- c("age","n")
merge(sature,ndesign,by="age")[1:5,]
plot(chd~age,data=artere,pch=15+chd,col=chd+1)
lines(p~age,data=sature)
```


```{r message=FALSE, warning=FALSE}
model <- glm(chd~.,data=SAheart,family=binomial)
library(generalhoslem)
logitgof(obs= SAheart$chd, exp = fitted(model))
```

```{r}
model <- glm(chd~.,data=SAheart,family=binomial)
prev_lin <- predict(model)
res_P <- residuals(model,type="pearson") #Pearson
res_PS <- rstandard(model,type="pearson") #Pearson standard
res_D <- residuals(model,type="deviance")  #Deviance
res_DS <- rstandard(model,type="deviance") #Deviance standard
```

```{r}
par(mfrow=c(2,2),pch=20,mai = c(0.1,0.15,0.1,0.1),mar=c(3,3,1,1),cex.axis=0.6,cex.lab=0.7,mgp=c(1.5,0.3,0),oma=c(1,0,0,0),tcl=-0.4)
plot(res_PS,cex=0.3,xlab="index",ylab="Pearson Standard")
plot(prev_lin,cex=0.3,res_PS,xlab="Prevision lineaire",ylab="Pearson Standard")
plot(res_DS,cex=0.3,xlab="index",ylab="Deviance Standard")
plot(prev_lin,cex=0.3,res_DS,xlab="Prevision lineaire",ylab="Deviance Standard")

```


# Choix de variables

```{r}
model0 <- glm(chd~sbp+ldl,data=SAheart,family=binomial)
model1 <- glm(chd~sbp+ldl+famhist+alcohol,data=SAheart,family=binomial)
anova(model0,model1,test="LRT")
```

```{r message=FALSE, warning=FALSE}
data(SAheart)
mod_sel <- bestglm(SAheart,family=binomial,IC="BIC")
mod_sel$BestModels
mod_sel1 <- bestglm(SAheart,family=binomial,IC="AIC")
mod_sel1$BestModels
```



# Scoring

```{r}
set.seed(1234)
ind.app <- sample(nrow(SAheart),300)
dapp <- SAheart[ind.app,]
dval <- SAheart[-ind.app,]
#Construction des modeles
model1 <- glm(chd~tobacco+famhist,data=dapp,family=binomial)
model2 <- glm(chd~tobacco+famhist+adiposity+alcohol,
                data=dapp,family=binomial)  
round(coef(model1),3)
round(coef(model2),3)

prev1 <- round(predict(model1,newdata=dval,type="response"))
prev2 <- round(predict(model2,newdata=dval,type="response"))
mean(prev1!=dval$chd)
mean(prev2!=dval$chd)
```


```{r}
set.seed(1245)
bloc <- sample(1:10,nrow(SAheart),replace=TRUE)
table(bloc)
```

```{r}
prev <- data.frame(matrix(0,nrow=nrow(SAheart),ncol=2))
names(prev) <- c("model1","model2")
for (k in 1:10){
  ind.val <- bloc==k
  dapp.k <- SAheart[!ind.val,]
  dval.k <- SAheart[ind.val,]
  model1 <- glm(chd~tobacco+famhist,data=dapp.k,family=binomial)
  model2 <- glm(chd~tobacco+famhist+adiposity+alcohol,data=dapp.k,family=binomial)  
  prev[ind.val,1] <- round(predict(model1,newdata=dval.k,type="response"))
  prev[ind.val,2] <- round(predict(model2,newdata=dval.k,type="response"))
}
apply(sweep(prev,1,SAheart$chd,FUN="!="),2,mean)
```


```{r}
score1 <- predict(model1,newdata=dval)
score2 <- predict(model2,newdata=dval)
```

```{r message=FALSE, warning=FALSE}
library(pROC)
R1 <- roc(dval$chd,score1)
R2 <- roc(dval$chd,score2)
plot(R1,lwd=3,legacy.axes=TRUE)
plot(R2,lwd=3,col="red",lty=2,legacy.axes=TRUE,add=TRUE)
couleur <- c("black","red")
legend("bottomright",legend=c("score1","score2"),col=couleur,lty=1:2,lwd=2,cex=0.75)

```

```{r}
auc(R1)
auc(R2)
```


```{r}
score <- data.frame(matrix(0,nrow=nrow(SAheart),ncol=2))
names(score) <- c("score1","score2")
for (k in 1:10){
  ind.val <- bloc==k
  dapp.k <- SAheart[!ind.val,]
  dval.k <- SAheart[ind.val,]
  model1 <- glm(chd~tobacco+famhist,data=dapp.k,family=binomial)
  model2 <- glm(chd~tobacco+famhist+adiposity+alcohol,data=dapp.k,family=binomial)  
  score[ind.val,1] <- predict(model1,newdata=dval.k)
  score[ind.val,2] <- predict(model2,newdata=dval.k)
}

```


```{r message=FALSE, warning=FALSE}
score$obs <- SAheart$chd
roc.cv <- roc(obs~score1+score2,data=score)
couleur <- c("black","red")
mapply(plot,roc.cv,col=couleur,lty=1:2,add=c(F,T),lwd=3,legacy.axes=TRUE)
legend("bottomright",legend=c("score1","score2"),col=couleur,lty=1:2,lwd=2,cex=0.75)
```

```{r}
sort(round(unlist(lapply(roc.cv,auc)),3),decreasing=TRUE)
```
