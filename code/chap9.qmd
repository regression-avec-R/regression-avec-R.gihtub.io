---
title: "9 Régression sur composantes : PCR et PLS"
toc: true
---

# Régression MCO et choix de variables

```{r}
ozone <- read.table("../donnees/ozone.txt",header=TRUE,sep=";",row.names=1)
modeleinit <- lm(O3 ~ ., data = ozone[,1:10])
round(coefficients(modeleinit),2)
BIC(modeleinit)
```

```{r}
library(leaps)
choix <- regsubsets(O3 ~ .,nbest=1,nvmax=10,data=ozone[,1:10])
resume <- summary(choix)
indmin <- which.min(resume$bic)
nomselec <- colnames(resume$which)[resume$which[indmin,]][-1]
formule <- formula(paste("O3~",paste(nomselec,collapse="+")))
modeleBIC <- lm(formule,data=ozone[,1:10])
round(coefficients(modeleBIC),2)
BIC(modeleBIC)
```
# Mise en place des données centrées réduites

```{r}
X <- ozone[,2:10]
Xbar  <- apply(X, 2, mean)
stdX <- sqrt(apply(X, 2, var))
Xcr <- scale(X, center = Xbar, scale = stdX)
```


# PCR

```{r}
library(pls)
set.seed(87)
cvseg <- cvsegments(nrow(ozone), k = 4, type = "random")
n.app <- nrow(ozone)
modele.pcr <- pcr(O3 ~ ., ncomp=9, data=ozone[,1:10], scale=T,
                   validation = "CV", segments = cvseg)
msepcv.pcr <- MSEP(modele.pcr ,estimate=c("train","CV")) 
msepcv.pcr
```

```{r}
npcr <- which.min(msepcv.pcr$val["CV",,])-1
modele.pcr.fin <- pcr(O3 ~ ., ncomp = npcr, scale = TRUE,data = ozone[,1:10])
```

```{r}
X <- ozone[,2:10]
Y <- ozone[,1]
n <- nrow(X)
Xbar  <- apply(X,2,mean)
stdX <- sqrt(apply(X,2,var)*(n-1)/n)
Ybar <- mean(Y)
modele.pcr.fin <- pcr(O3~.,ncomp=1,scale=TRUE,data =ozone[,1:10])
betafinpcr <- matrix(coefficients(modele.pcr.fin),ncol=1)/stdX
mu <- mean(Y)-Xbar%*%betafinpcr
c(mu,betafinpcr)
```

# PLS

```{r}
set.seed(87)
cvseg <- cvsegments(nrow(ozone), k = 4, type = "random")
n.app <- nrow(ozone)
modele.pls <- plsr(O3 ~ ., ncomp=9, data = ozone[,1:10], scale=T,validation = "CV", segments = cvseg)
msepcv.pls <- MSEP(modele.pls ,estimate=c("train","CV")) 
msepcv.pls
```

```{r}
npls <- which.min(msepcv.pls$val["CV",,])-1
modele.pls.fin <- plsr(O3~ . , ncomp  =npls, scale = TRUE,data = ozone[,1:10])
```


```{r}
X <- ozone[,2:10]
Y <- ozone[,1]
n <- nrow(X)
Xbar  <- apply(X,2,mean)
stdX <- sqrt(apply(X,2,var)*(n-1)/n)
Ybar <- mean(Y)
modele.pls.fin <- plsr(O3~.,ncomp=1,scale=TRUE,data =ozone[,1:10])
betafinpls <- matrix(coefficients(modele.pls.fin),ncol=1)/stdX
mu <- mean(Y)-Xbar%*%betafinpls
c(mu,betafinpls)
```

