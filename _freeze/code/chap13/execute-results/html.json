{
  "hash": "18915881e77b8bdfc5f5c4a82871b517",
  "result": {
    "markdown": "---\ntitle: \"13 Régularisation de la vraisemblance\"\ntoc: true\n---\n\n\n# Régressions pénalisées avec glmnet\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(bestglm)\ndata(SAheart)\nSAheart.X <- model.matrix(chd~.,data=SAheart)[,-1]\nSAheart.Y <- SAheart$chd \nlibrary(glmnet)\nridge <- glmnet(SAheart.X,SAheart.Y,family=\"binomial\",alpha=0)\nlasso <- glmnet(SAheart.X,SAheart.Y,family=\"binomial\",alpha=1)\npar(mfrow=c(2,2))\nplot(ridge,ylim=c(-0.1,0.2))\nplot(lasso,ylim=c(-0.1,0.2))\nplot(ridge,ylim=c(-0.1,0.2),xvar=\"lambda\")\nplot(lasso,ylim=c(-0.1,0.2),xvar=\"lambda\")\n```\n\n::: {.cell-output-display}\n![](chap13_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(ridge,ylim=c(-0.1,0.2),cex.lab=0.5)\nplot(lasso,ylim=c(-0.1,0.2),cex.lab=0.5)\nplot(ridge,ylim=c(-0.1,0.2),xvar=\"lambda\",cex.lab=0.5)\nplot(lasso,ylim=c(-0.1,0.2),xvar=\"lambda\",cex.lab=0.5)\n```\n\n::: {.cell-output-display}\n![](chap13_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n:::\n\n\n# Validation croisée\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2398)\nm1.ridge <- cv.glmnet(SAheart.X,SAheart.Y,family=\"binomial\",alpha=0)\nm1.lasso <- cv.glmnet(SAheart.X,SAheart.Y,family=\"binomial\",alpha=1)\nm2.ridge <- cv.glmnet(SAheart.X,SAheart.Y,family=\"binomial\",alpha=0,type.measure=\"class\")\nm2.lasso <- cv.glmnet(SAheart.X,SAheart.Y,family=\"binomial\",alpha=1,type.measure=\"class\")\nm3.ridge <- cv.glmnet(SAheart.X,SAheart.Y,family=\"binomial\",alpha=0,type.measure=\"auc\")\nm3.lasso <- cv.glmnet(SAheart.X,SAheart.Y,family=\"binomial\",alpha=1,type.measure=\"auc\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nm1.ridge$lambda.min\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.01774595\n```\n:::\n\n```{.r .cell-code}\nm1.ridge$lambda.1se\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2892148\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(3,2))\nplot(m1.ridge,main=\"Ridge\")\nplot(m1.lasso,main=\"Lasso\")\nplot(m2.ridge,main=\"Ridge\")\nplot(m2.lasso,main=\"Lasso\")\nplot(m3.ridge,main=\"Ridge\")\nplot(m3.lasso,main=\"Lasso\")\n```\n\n::: {.cell-output-display}\n![](chap13_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n# Group-lasso et elastic net\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gglasso)\nX1 <- c(rep(\"A\",60),rep(\"B\",90),rep(\"C\",50))\nX2 <- c(rep(\"E\",40),rep(\"F\",60),rep(\"G\",55),rep(\"H\",45))\nset.seed(1298)\nX_3 <- runif(200)\nset.seed(2381)\nY <- round(runif(200))\ndonnees <- data.frame(X1,X2,X_3,Y)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nD <- model.matrix(Y~.,data=donnees)[,-1]\nlasso <- glmnet(D,Y,alpha=1,lambda=exp(seq(-3,-5,length=100)))\ngroupe <- c(1,1,2,2,2,3)\nlibrary(gglasso)\nY1 <- 2*Y-1 \ng.lasso <- gglasso(D,Y1,group=groupe,loss=\"logit\",lambda=exp(seq(-4.5,-5.5,length=100)))\nplot(lasso,xvar=\"lambda\",lwd=2,main=\"Lasso\")\n```\n\n::: {.cell-output-display}\n![](chap13_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(g.lasso,main=\"Group-lasso\")\n```\n\n::: {.cell-output-display}\n![](chap13_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(caret)\nalpha <- seq(0,1,by=0.1)\nlambda <- exp(seq(-7,2,length=100))\ngrille <- expand.grid(alpha=alpha,lambda=lambda)\nctrl <- trainControl(method=\"cv\")\nSAheart$chd <- as.factor(SAheart$chd)\nset.seed(1234)\nsel <- train(chd~.,data=SAheart,method=\"glmnet\",family=\"binomial\",trControl=ctrl,tuneGrid=grille)\nsel$bestTune\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    alpha     lambda\n747   0.7 0.05971442\n```\n:::\n\n```{.r .cell-code}\ngetTrainPerf(sel)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  TrainAccuracy TrainKappa method\n1     0.7489362  0.3759712 glmnet\n```\n:::\n:::\n\n\n\n# Application : détection d'images publicitaires\n\n\n::: {.cell}\n\n```{.r .cell-code}\nad.data <- read.table(\"../donnees/ad_data.txt\",header=FALSE,sep=\",\",dec=\".\",na.strings = \"?\",strip.white = TRUE)\nnames(ad.data)[ncol(ad.data)] <- \"Y\"\nad.data$Y <- as.factor(ad.data$Y)\n\nad.data1 <- na.omit(ad.data)\ndim(ad.data1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2359 1559\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nind.app <- sample(nrow(ad.data1),1800)\ndapp <- ad.data1[ind.app,]\ndtest <- ad.data1[-ind.app,]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nX.app <- model.matrix(Y~.,data=dapp)[,-1]\nX.test <- model.matrix(Y~.,data=dtest)[,-1]\nY.app <- dapp$Y\nY.test <- dtest$Y\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlogit <- glm(Y~.,data=dapp,family=\"binomial\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nlasso.cv <- cv.glmnet(X.app,Y.app,family=\"binomial\")\nridge.cv <- cv.glmnet(X.app,Y.app,family=\"binomial\",alpha=0,lambda=exp(seq(-8,0,length=100)))\nen.cv <- cv.glmnet(X.app,Y.app,family=\"binomial\",alpha=0.5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1,3))\nplot(lasso.cv,main=\"Lasso\")\nplot(ridge.cv,main=\"Ridge\")\nplot(en.cv,main=\"Elastic net\")\n```\n\n::: {.cell-output-display}\n![](chap13_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nscore <- data.frame(obs=dtest$Y,logit=predict(logit,newdata=dtest,type=\"response\"),\n                                lasso=as.vector(predict(lasso.cv,newx = X.test,type=\"response\")),\n                                ridge=as.vector(predict(ridge.cv,newx = X.test,type=\"response\")),\n                                en=as.vector(predict(en.cv,newx = X.test,type=\"response\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pROC)\nroc.ad <- roc(obs~logit+lasso+ridge+en,data=score)\n\ncouleur <- c(\"black\",\"red\",\"blue\",\"green\")\nmapply(plot,roc.ad,col=couleur,lty=1:4,add=c(F,T,T,T),lwd=2,legacy.axes=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   logit       lasso       ridge       en         \npercent            FALSE       FALSE       FALSE       FALSE      \nsensitivities      numeric,329 numeric,276 numeric,515 numeric,266\nspecificities      numeric,329 numeric,276 numeric,515 numeric,266\nthresholds         numeric,329 numeric,276 numeric,515 numeric,266\ndirection          \"<\"         \"<\"         \"<\"         \"<\"        \ncases              numeric,461 numeric,461 numeric,461 numeric,461\ncontrols           numeric,98  numeric,98  numeric,98  numeric,98 \nfun.sesp           ?           ?           ?           ?          \nauc                0.8635619   0.9695648   0.9805879   0.969587   \ncall               expression  expression  expression  expression \noriginal.predictor numeric,559 numeric,559 numeric,559 numeric,559\noriginal.response  factor,559  factor,559  factor,559  factor,559 \npredictor          numeric,559 numeric,559 numeric,559 numeric,559\nresponse           factor,559  factor,559  factor,559  factor,559 \nlevels             character,2 character,2 character,2 character,2\npredictor.name     \"logit\"     \"lasso\"     \"ridge\"     \"en\"       \nresponse.name      \"obs\"       \"obs\"       \"obs\"       \"obs\"      \n```\n:::\n\n```{.r .cell-code}\nlegend(\"bottomright\",legend=c(\"logit\",\"lasso\",\"ridge\",\"elastic net\"),col=couleur,lty=1:4,lwd=2,cex=0.65)\n```\n\n::: {.cell-output-display}\n![](chap13_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsort(round(unlist(lapply(roc.ad,auc)),3),decreasing=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nridge lasso    en logit \n0.981 0.970 0.970 0.864 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprev1 <- data.frame(apply(round(score[,-1]),2,factor,labels=c(\"ad.\",\"nonad.\")))\nerr <- apply(sweep(prev1,1,dtest$Y,FUN=\"!=\"),2,mean)\nsort(round(err,3))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nridge lasso    en logit \n0.030 0.034 0.036 0.077 \n```\n:::\n:::\n",
    "supporting": [
      "chap13_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}